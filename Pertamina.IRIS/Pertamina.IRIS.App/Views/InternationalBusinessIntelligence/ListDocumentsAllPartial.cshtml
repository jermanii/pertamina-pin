@using Pertamina.IRIS.Models.Base
@inject GlobalVariableBaseModel globalParam
@model List<Pertamina.IRIS.Models.ViewModels.InternationalBusinessIntelligenceViewModel>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<div class="row g-6 g-xl-9 mb-9">
    @foreach (var o in Model)
    {
        <div class="col-md-3 h-100">
            <div class="card h-100 ">
                <div class="card-header flex-nowrap border-0 p-5">
                    <div class="card-title m-0 d-flex w-75">
                        <h5>@o.Title</h5>
                    </div>
                    <div class="card-toolbar row justify-content-between align-items-center m-0">
                        <a href="@Url.Action("Update","InternationalBusinessIntelligence", new { guid = @o.Id })"
                           class="fw-bold w-25">
                            <i class="fa fa-edit"></i>
                        </a>
                        <a href="@Url.Action("DetailDocuments","InternationalBusinessIntelligence", new { guid = @o.Id })"
                           class="fw-bold w-25">
                            <i class="fa fa-eye"></i>
                        </a>
                        <a class="fw-bold pointer ibi-download w-25" data-idibi="@o.Id" data-title="@o.Title">
                            <i class="fa fa-download"></i>
                        </a>
                    </div>
                </div>
                <div class="card-body flex-column pt-0 px-5 pb-6 d-inline">
                    <h6 class="fw-semibold">Author:</h6>
                    @{
                        int countAuthor = 0;
                        int totalAuthor = o.Authors.Count;
                        string authorsName = string.Empty;
                    }
                    @foreach (var a in o.Authors)
                    {
                        countAuthor++;
                        authorsName += a.Name;
                        if (countAuthor != totalAuthor)
                        {
                            authorsName += ", ";
                        }
                    }
                    <span>@authorsName</span>
                    <span class="px-2">|</span>
                    <span class="text-gray">Created @string.Format("{0:MMM, yyyy}", o.ResearchDate)</span>
                    <p class="pt-5">
                        @o.Description
                    </p>
                </div>
                <div class="card-body d-flex flex-column pt-0 px-5 pb-3">
                    <h5 class="fw-bold">Countries Covered:</h5>
                    @{
                        int countCountry = 0;
                        int totalCountry = o.RelatedCountry.Count;
                        string countryName = string.Empty;
                    }
                    @foreach (var c in o.RelatedCountry)
                    {
                        countCountry++;
                        countryName += c.NegaraMitra.NamaNegara;
                        if (countCountry != totalCountry)
                        {
                            countryName += ", ";
                        }
                    }
                    <p>
                        @countryName
                    </p>
                </div>
            </div>
        </div>        
    }
</div>